"""Initial migration

Revision ID: b2434f836bff
Revises: 
Create Date: 2024-05-28 18:36:45.057031

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b2434f836bff'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('graduated_students')
    op.drop_table('on_campus_students')
    with op.batch_alter_table('book_loans', schema=None) as batch_op:
        batch_op.alter_column('should_return_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=False)
        batch_op.alter_column('loan_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=False)
        batch_op.alter_column('return_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('book_loans', schema=None) as batch_op:
        batch_op.alter_column('return_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('loan_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
        batch_op.alter_column('should_return_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    op.create_table('on_campus_students',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tutor_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('co_tutor_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('tutor_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('co_tutor_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='on_campus_students_pkey')
    )
    op.create_table('graduated_students',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('graduation_time', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('first_employment_unit', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='graduated_students_pkey')
    )
    # ### end Alembic commands ###
